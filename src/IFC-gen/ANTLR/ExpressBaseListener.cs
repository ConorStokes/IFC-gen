//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ./ANTLR/Express.g4 by ANTLR 4.7

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Express {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IExpressListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7")]
[System.CLSCompliant(false)]
public partial class ExpressBaseListener : IExpressListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.schema_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSchema_declaration([NotNull] ExpressParser.Schema_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.schema_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSchema_declaration([NotNull] ExpressParser.Schema_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.type_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_declaration([NotNull] ExpressParser.Type_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.type_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_declaration([NotNull] ExpressParser.Type_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.value_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValue_type([NotNull] ExpressParser.Value_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.value_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValue_type([NotNull] ExpressParser.Value_typeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.enumeration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumeration([NotNull] ExpressParser.EnumerationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.enumeration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumeration([NotNull] ExpressParser.EnumerationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.id_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterId_list([NotNull] ExpressParser.Id_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.id_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitId_list([NotNull] ExpressParser.Id_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.enum_id_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnum_id_list([NotNull] ExpressParser.Enum_id_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.enum_id_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnum_id_list([NotNull] ExpressParser.Enum_id_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.type_declaration_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType_declaration_body([NotNull] ExpressParser.Type_declaration_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.type_declaration_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType_declaration_body([NotNull] ExpressParser.Type_declaration_bodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.where_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhere_declaration([NotNull] ExpressParser.Where_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.where_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhere_declaration([NotNull] ExpressParser.Where_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.where_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhere_statement([NotNull] ExpressParser.Where_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.where_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhere_statement([NotNull] ExpressParser.Where_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.entity_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEntity_declaration([NotNull] ExpressParser.Entity_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.entity_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEntity_declaration([NotNull] ExpressParser.Entity_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.entity_declaration_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEntity_declaration_body([NotNull] ExpressParser.Entity_declaration_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.entity_declaration_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEntity_declaration_body([NotNull] ExpressParser.Entity_declaration_bodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.subtype_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubtype_declaration([NotNull] ExpressParser.Subtype_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.subtype_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubtype_declaration([NotNull] ExpressParser.Subtype_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.one_of"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOne_of([NotNull] ExpressParser.One_ofContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.one_of"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOne_of([NotNull] ExpressParser.One_ofContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.supertype_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSupertype_declaration([NotNull] ExpressParser.Supertype_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.supertype_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSupertype_declaration([NotNull] ExpressParser.Supertype_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.inverse_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInverse_declaration([NotNull] ExpressParser.Inverse_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.inverse_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInverse_declaration([NotNull] ExpressParser.Inverse_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.inverse_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInverse_statement([NotNull] ExpressParser.Inverse_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.inverse_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInverse_statement([NotNull] ExpressParser.Inverse_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.unique_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnique_declaration([NotNull] ExpressParser.Unique_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.unique_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnique_declaration([NotNull] ExpressParser.Unique_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.unique_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnique_statement([NotNull] ExpressParser.Unique_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.unique_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnique_statement([NotNull] ExpressParser.Unique_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.function_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_declaration([NotNull] ExpressParser.Function_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.function_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_declaration([NotNull] ExpressParser.Function_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="ExpressParser.function_declaration_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunction_declaration_body([NotNull] ExpressParser.Function_declaration_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="ExpressParser.function_declaration_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunction_declaration_body([NotNull] ExpressParser.Function_declaration_bodyContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace Express
